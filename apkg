#!/bin/sh
#############################################################################
# apkg - a front-end script to autopackage for AliEn
#############################################################################
#
#
# SYNOPSIS
#
# DESCRIPTION
#
# AUTHOR:
# Predrag Buncic, e-mail: Predrag.Buncic@cern.ch
#
# CREATION DATE:
#C<
#############################################################################
VERSION=0.01
###########################################################################
[ -f $HOME/.alien/apkg.rc ] && . $HOME/.alien/apkg.rc
###########################################################################
URL=${APKG_URL:=http://alien.cern.ch/cache/dist/releases/HEAD}
AUTOURL=${APKG_AUTOURL:=http://alien.cern.ch/cache/packages}
CACHEURL=${APKG_CACHEURL:=http://alien.cern.ch/cache}
PREFIX=${APKG_PREFIX:=/opt/alien}
PLATFORM=${APKG_PLATFORM:=}
CONFIG_PLATFORM=${APKG_CONFIG_PLATFORM:=}
ALIEN_VERSION=1
AUTOPACKAGE_VERSION=1.05  


# release_file=`mktemp /tmp/release.XXXXXX`
# cache_file=`mktemp /tmp/cache.XXXXXX`
# dialog_file=`mktemp /tmp/dialog.XXXXXX`
#wget -O $cache_file http://alien.cern.ch/BitServers > /dev/null 2>&1 
#list=`grep -v -e HEAD -e "^#" $release_file |  awk -F: '{if (i==1) {on="on"} else {on="0"}; printf("%s %s %s ",$3,$4,on); i++}'`
#caches=`grep -v -e "^#" $cache_file | grep $platform | awk -v platform=$APKG_PLATFORM -v release=$ALIEN_RELEASE -F'|' '{printf("%s/%s/%s/download/",$2,platform,release)}' | sed 's/ *//'`


###########################################################################
RcUpdate()
###########################################################################
{
  mkdir -p $HOME/.alien
  (
    echo "APKG_URL=$URL"
    echo "APKG_AUTOURL=$AUTOURL"
    echo "APKG_CACHEURL=$CACHEURL"
    echo "APKG_PREFIX=$PREFIX"
    echo "APKG_PLATFORM=$PLATFORM"
    echo "APKG_CONFIG_PLATFORM=$CONFIG_PLATFORM"
  ) > $HOME/.alien/apkg.rc
}
###########################################################################
Usage()
###########################################################################
{
cat<<EOF  

apkg  [--prefix <path>]
      [--force] 
      [-qt|--qtfe][-g|--gtkfe][-t|--ttyfe]
      [--platform <string>]
      [--url <url>][--cacheurl <cache url>][--autourl <autopackage url>]
      [-h|--help]"
      manager
      install <all|client|site|wn|core>
      <autopackage action> <args>

EOF

[ -x $PREFIX/bin/package ] && $PREFIX/bin/package --help

exit 0

}
###########################################################################
Error()
###########################################################################
{
   echo "Error:" $*
   exit 1
}
###########################################################################
Configure()
###########################################################################
{
  mkdir -p $PREFIX/bin || Error "Cannot create directory: $PREFIX"

  [ ! -f $PREFIX/bin/apkg ] && cp $0 $PREFIX/bin

  TOOLS="tar wget pkg-config"

  for cmd in $TOOLS
  do
    which $cmd > /dev/null || Error "Cannot find $cmd command."
  done

  AUTOPACKAGES=""

  [ ! -f $PREFIX/bin/package -o ! -z "$FORCE" ] && \
                              AUTOPACKAGES=$AUTOPACKAGES" autopackage"

  [ ! -f $PREFIX/bin/apg++ -o ! -z "$FORCE" ] && \
                              AUTOPACKAGES=$AUTOPACKAGES" autopackage-apbuild"

  LIBS="glib-2.0 gtk+"

  ld_path=$LD_LIBRARY_PATH

  for lib in $LIBS
  do
    libs=`pkg-config --libs-only-L $lib | sed -e 's/ \?\-L/:/g'` || Error "Cannot find $lib on your system." 
    ld_path=$ld_path$libs 
    [ "$MODE" = "" ] && MODE="gtkfe"
 done

  [ ! -f $PREFIX/bin/autopackage-frontend-gtk -o ! -z "$FORCE" ] && \
                              AUTOPACKAGES=$AUTOPACKAGES" autopackage-gtkfe"

  [ ! -f $PREFIX/bin/autopackage-manager-gtk -o ! -z "$FORCE" ]  && \
                              AUTOPACKAGES=$AUTOPACKAGES" autopackage-manager"

  DIRS="/usr/lib/qt3/lib /usr/qt/3/lib /usr/lib/qt-3.*"

  for dir in $DIRS
  do
    if [ -d $dir ]
    then 
      ld_path=$ld_path:$dir
      AUTOPACKAGES=$AUTOPACKAGES" autopackage-qtfe"
      [ "$MODE" = "" ] && MODE="qtfe"
    fi
  done

  ld_path=`echo $ld_path | sed -e 's/ *//g' -e 's/::/:/g' -e 's/^://'`

  EXTRAPACKAGES=""

  [ ! -f $PREFIX/lib/libuau.a -o ! -z "$FORCE" ]  && \
                               EXTRAPACKAGES=$EXTRAPACKAGES" luau-0.1.9"
  [ ! -f $PREFIX/bin/curl -o ! -z "$FORCE" ]  && \
                               EXTRAPACKAGES=$EXTRAPACKAGES" curl-7.13.2"
  [ ! -f $PREFIX/lib/libhistory.a -o ! -z "$FORCE" ] && \
                               EXTRAPACKAGES=$EXTRAPACKAGES" readline-5.0"

  for name in $EXTRAPACKAGES
  do
    (cd $PREFIX; wget -q -O - ${URL}/${name}_${CONFIG_PLATFORM}.tar.bz2 | tar jxf -)
  done

  for name in $AUTOPACKAGES
  do
    (cd $PREFIX; wget -q -O - ${URL}/${name}-${AUTOPACKAGE_VERSION}_${CONFIG_PLATFORM}.tar.bz2 | tar jxf -)
  done

  RcUpdate
}

###########################################################################
Install()
###########################################################################
{
  Configure

  export LD_LIBRARY_PATH=$PREFIX/lib:$ld_path:$LD_LIBRARY_PATH
  export PATH=$PREFIX/bin:$PATH

  tmpdir=`mktemp -d /tmp/dialog.XXXXXX`

  mkdir -p $tmpdir || Error "Cannot create directory: $tmpdir"

  if [ "$MODE" = "qtfe" ] 
  then
    arg=""
  else
    arg="--$MODE"
  fi

  for pkg in $*
  do
    (cd $tmpdir && wget -q ${AUTOURL}/alien-meta-$pkg-${ALIEN_VERSION}.${PLATFORM}.package && sh alien-meta-$pkg-${ALIEN_VERSION}.${PLATFORM}.package $arg) || Error "Could not install $pkg"
  done

  rm -rf $tmpdir
}

###########################################################################
Manage()
###########################################################################
{
  Configure

  export LD_LIBRARY_PATH=$PREFIX/lib:$ld_path:$LD_LIBRARY_PATH
  export PATH=$PREFIX/bin:$PATH

  case $MODE in
     qtfe)
       [ -x $PREFIX/bin/autopackage-manager-qt ] && \
            $PREFIX/bin/autopackage-manager-qt
       ;; 
     gtkfe)
       [ -x $PREFIX/bin/autopackage-manager-gtk ] && \
            $PREFIX/bin/autopackage-manager-gtk
       ;; 
     *)
       break     
  esac
  
  exit 
}

###########################################################################
###########################################################################


if [ "$PLATFORM" = "" -o "$CONFIG_PLATFORM" = "" ]
then
  for dir in /usr/share/libtool /usr/lib/rpm 
  do
    if [ -f $dir/config.guess ]
    then
      p=`$dir/config.guess`
      break
    fi
  done

  case $p in
   i*86-pc-linux-gnu)
     platform=i686-pc-linux-gnu
      autoplatform=x86
   ;; 
   ia64-*-linux-gnu) 
     platform=ia64-unknown-linux-gnu 
      autoplatform=x86_64
   ;;
   powerpc-apple-darwin8.*.*) 
     platform=powerpc-apple-darwin8.1.0 
      autoplatform=ppc
   ;;
    x86_64-*-linux-gnu)
    platform=x86_64-unknown-linux-gnu
      autoplatform=ia64
   ;;
  esac

  PLATFORM=$autoplatform
  CONFIG_PLATFORM=$platform
fi

FORCE=""

args=$*
 
while [ $# -gt 0 ]
do
    case $1 in
        --platform)
            shift 1
	    PLATFORM=$1
            shift 1
           ;;
        --prefix)
            shift 1
	    PREFIX=$1
            shift 1
           ;;
        --url)
            shift 1
	    URL=$1
            shift 1
           ;;
        --autourl)
            shift 1
	    AUTOURL=$1
            shift 1
           ;;
        --cacheurl)
            shift 1
	    CACHEURL=$1
            shift 1
           ;;
        --trace)
            shift 1
	    set -vx
           ;;
        --force)
            shift 1
	    FORCE=true
           ;;
        -qt|--qtfe)
            shift 1
	    MODE=qtfe
           ;;
        -g|--gtkfe)
            shift 1
	    MODE=gtkfe
           ;;
        -t|--ttyfe)
            shift 1
	    MODE=ttyfe
           ;;
        -h|--help)
            shift 1
	    Usage
           ;;
        manager)
            shift 1
	    Manage
            exit 
           ;;
        install)
            shift 1
	    Install $*
            exit 
           ;;
        *)
           if [ -x $PREFIX/bin/package ] 
           then 
             $PREFIX/bin/package $*
             exit
           else
             Error "Unknown command: $*"
           fi
           ;;
    esac
done



